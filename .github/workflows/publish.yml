name: Release
on:
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    release:
        strategy:
            fail-fast: false
            matrix:
                platform: [ubuntu-latest, windows-latest]

        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout 🛎️
              uses: actions/checkout@v3

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-latest'
              run: |
                sudo apt-get update
                sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libxdo-dev

            - name: Setup PNPM
              uses: pnpm/action-setup@v2
              with:
                  version: latest

            - name: Setup node and Cache .pnpm-store
              uses: actions/setup-node@v3
              with:
                  node-version: latest
                  cache: "pnpm"
                  cache-dependency-path: "./frontend/pnpm-lock.yaml"

            - name: Rust setup
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal

            - name: Install dependencies
              working-directory: ./frontend
              run: pnpm install

            - name: Build manually?
              working-directory: ./frontend
              run: pnpm build:tauri

            - name: Build 🔧
              uses: tauri-apps/tauri-action@v0
              id: tauri
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  # the action automatically replaces __VERSION__ with the app version
                  tagName: v__VERSION__
                  releaseName: "v__VERSION__"
                  releaseDraft: true
                  prerelease: false
                  tauriScript: "pnpm"
                  projectPath: ./frontend/src-tauri
                  # distPath: ./frontend/dist
                  # iconPath: src-tauri/icons/icon.png
            - name: Set output url to version
              if: matrix.platform == 'ubuntu-latest'
              run: |
                echo -n "VERSION=" >> "$GITHUB_ENV"
                cat ./frontend/src-tauri/tauri.conf.json | grep -o -E '[0-9]+\.[0-9]+\.[0-9]+' >> "$GITHUB_ENV"
            
            - name: Make PKGBUILD for AUR(-bin)
              if: matrix.platform == 'ubuntu-latest'
              working-directory: ./frontend
              run: chmod a+x ./MAKE_PKGBUILD.sh; ./MAKE_PKGBUILD.sh "$VERSION" ./src-tauri/target | tee PKGBUILD
            - name: Publish AUR package(-bin)
              if: matrix.platform == 'ubuntu-latest'
              uses: KSXGitHub/github-actions-deploy-aur@v2.7.0
              with:
                pkgname: kittygifs-bin
                pkgbuild: ./frontend/PKGBUILD
                commit_username: ${{ secrets.AUR_USERNAME }}
                commit_email: ${{ secrets.AUR_EMAIL }}
                ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
                commit_message: Update AUR package from GitHub Actions
                ssh_keyscan_types: ed25519